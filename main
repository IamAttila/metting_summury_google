{
  "name": "My workflow 2",
  "nodes": [
    {
      "parameters": {
        "options": {
          "temperature": 0
        }
      },
      "id": "74ea6635-6cb6-4902-9c51-c6d16796f656",
      "name": "OpenAI Chat Model1",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "position": [
        520,
        260
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "url": "https://meet.googleapis.com/v2/conferenceRecords",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleOAuth2Api",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "filter",
              "value": "=space.meeting_code={{ $json.conferenceData.conferenceId }}"
            }
          ]
        },
        "options": {}
      },
      "id": "8fe70bd1-214a-4b94-87c8-629a00bdb8bc",
      "name": "Get Meeting ConferenceRecords",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        -120,
        120
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "url": "=https://meet.googleapis.com/v2/{{ $json.conferenceRecords[0].name }}/transcripts",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleOAuth2Api",
        "options": {}
      },
      "id": "73c80fc1-d23e-4250-884c-1e398684b4c5",
      "name": "Get Meeting Transcript Location",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        60,
        120
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "operation": "download",
        "fileId": {
          "__rl": true,
          "mode": "url",
          "value": "={{ $json.docsDestination.document }}"
        },
        "options": {
          "googleFileConversion": {
            "conversion": {
              "docsToFormat": "application/pdf"
            }
          }
        }
      },
      "id": "127f40df-e09c-4165-8cc7-8a5bd443aa00",
      "name": "Get Transcript File",
      "type": "n8n-nodes-base.googleDrive",
      "position": [
        240,
        120
      ],
      "typeVersion": 3
    },
    {
      "parameters": {},
      "id": "6489f27a-3d62-43cb-af9c-5f6d85ed062e",
      "name": "When clicking \"Test workflow\"",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -620,
        80
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "pdf",
        "options": {}
      },
      "id": "b2dcd59d-9673-408a-95d3-078122dd2501",
      "name": "PDF Loader",
      "type": "n8n-nodes-base.extractFromFile",
      "position": [
        520,
        60
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "get",
        "calendar": {
          "__rl": true,
          "mode": "list",
          "value": "c_5792bdf04bc395cbcbc6f7b754268245a33779d36640cc80a357711aa2f09a0a@group.calendar.google.com",
          "cachedResultName": "n8n-events"
        },
        "eventId": "abc123",
        "options": {}
      },
      "id": "2630231e-6b68-4f8a-b621-48bdc406d565",
      "name": "Get Calendar Event",
      "type": "n8n-nodes-base.googleCalendar",
      "position": [
        -420,
        80
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "jsonSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"summary\": { \"type\": \"string\" },\n    \"highlights\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"attendee\": { \"type\": \"string\" },\n          \"message\": { \"type\": \"string\" }\n        }\n      }\n    },\n   \"next_steps\": {\n      \"type\": \"array\",\n      \"items:\": {\n        \"type\": \"string\"\n      }\n   },\n   \"meetings_created\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"event_title\": { \"type\": \"string\" },\n           \"event_invite_url\": { \"type\" : \"string\" }\n        }\n      }\n   }\n  }\n}"
      },
      "id": "4028d26e-51a6-4b4b-8512-9c6dfcd8604f",
      "name": "Structured Output Parser",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "position": [
        900,
        200
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {},
      "id": "5307f759-69a5-44e8-b247-ce197c2250fa",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        -480,
        620
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3c12dc11-0ff3-4c6a-9d67-1454d7b0d16d",
              "name": "response",
              "type": "string",
              "value": "={{ JSON.stringify($('Create Calendar Event1').item.json) }}"
            }
          ]
        },
        "options": {}
      },
      "id": "41d1acba-5591-4d39-b7ec-59edf1d4b6d4",
      "name": "Response",
      "type": "n8n-nodes-base.set",
      "position": [
        740,
        500
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "7263764b-8409-4cea-8db3-3278dd7ef9d8",
              "name": "=route",
              "type": "string",
              "value": "={{ $json.route }}"
            },
            {
              "id": "55c3b207-2e98-4137-8413-f72cbff17986",
              "name": "query",
              "type": "object",
              "value": "={{ $json.query.parseJson() }}"
            }
          ]
        },
        "options": {}
      },
      "id": "f1b0a145-7892-4ff4-b762-e7ed82216e3c",
      "name": "Edit Fields",
      "type": "n8n-nodes-base.set",
      "position": [
        -320,
        620
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"response\": {\n    \"ok\": false,\n    \"error\": \"L'outil demandé n'a pas été trouvé ou le service peut être indisponible.\"\n  }\n}\n",
        "options": {}
      },
      "id": "9572a340-e85a-4802-b26b-75070c57b294",
      "name": "Fallback Response",
      "type": "n8n-nodes-base.set",
      "position": [
        -120,
        880
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 1
                },
                "conditions": [
                  {
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "leftValue": "={{ $json.route }}",
                    "rightValue": "meetings.create",
                    "id": "56fa83af-f5e4-4f68-ad6e-ffed597a1219"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "meetings.create"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "id": "4ae2eaf6-9bb1-4474-b4a9-49a2a6efbc2a",
      "name": "Actions Router",
      "type": "n8n-nodes-base.switch",
      "position": [
        -160,
        620
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "521823f4-cee1-4f69-82e7-cea9be0dbc41",
              "name": "attendees",
              "type": "array",
              "value": "={{ $('Actions Router').item.json.query.attendees }}"
            }
          ]
        },
        "options": {}
      },
      "id": "a6b03558-272f-4da2-a50c-568c431dd1d7",
      "name": "Get Attendees",
      "type": "n8n-nodes-base.set",
      "position": [
        320,
        500
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "fieldToSplitOut": "attendees",
        "options": {}
      },
      "id": "f2aa5580-dd93-453e-a2af-6b6f096030bd",
      "name": "Attendees List",
      "type": "n8n-nodes-base.splitOut",
      "position": [
        320,
        840
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "operation": "update",
        "calendar": {
          "__rl": true,
          "mode": "list",
          "value": "c_5792bdf04bc395cbcbc6f7b754268245a33779d36640cc80a357711aa2f09a0a@group.calendar.google.com",
          "cachedResultName": "n8n-events"
        },
        "eventId": "={{ $('Create Calendar Event1').item.json.id }}",
        "updateFields": {
          "attendees": [
            "={{ $json.name }} <{{ $json.email }}>"
          ]
        }
      },
      "id": "11437174-366c-430a-89f2-b7994623d777",
      "name": "Add Attendee to Invite",
      "type": "n8n-nodes-base.googleCalendar",
      "position": [
        540,
        660
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "mode": "list",
          "value": "c_5792bdf04bc395cbcbc6f7b754268245a33779d36640cc80a357711aa2f09a0a@group.calendar.google.com",
          "cachedResultName": "n8n-events"
        },
        "start": "={{ $json.query.start_date }} {{ $json.query.start_time }}",
        "end": "={{ $json.query.end_date }} {{ $json.query.end_time }}",
        "additionalFields": {
          "attendees": [],
          "description": "={{ $json.query.description }}",
          "summary": "={{ $json.query.title }}"
        }
      },
      "id": "b42b0f2b-3874-448d-ae5b-7f90659e6f29",
      "name": "Create Calendar Event1",
      "type": "n8n-nodes-base.googleCalendar",
      "position": [
        120,
        500
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "name": "create_calendar_event",
        "description": "=Appelez cet outil pour créer un événement de calendrier. Cet outil nécessite l'objet suivant dans le corps de la requête.\n```\n{\n  \"type\": \"object\",\n  \"properties\": {\n    \"title\": { \"type\": \"string\" },\n    \"description\": { \"type\": \"string\" },\n    \"start_date\": { \"type\": \"string\" },\n    \"start_time\": { \"type\": \"string\" },\n    \"end_date\": { \"type\": \"string\" },\n    \"end_time\": { \"type\": \"string\" },\n    \"attendees\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"name\": { \"type\": \"string\" },\n          \"email\": { \"type\": \"string\" }\n        }\n      }\n    }\n  }\n}\n```\nNotez que les dates sont au format yyyy-MM-dd et les heures au format HH:mm:ss.",
        "workflowId": "={{ $workflow.id }}",
        "fields": {
          "values": [
            {
              "name": "route",
              "stringValue": "meetings.create"
            }
          ]
        }
      },
      "id": "726b5b9b-ad7c-4407-83d8-d9f41f158dd5",
      "name": "Schedule Meeting",
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "position": [
        780,
        280
      ],
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "agent": "openAiFunctionsAgent",
        "promptType": "define",
        "text": "=système : votre rôle est d'aider les gens à tirer le meilleur parti de leurs réunions. Vous y parvenez en résumant utilement le compte-rendu de la réunion pour en extraire des informations utiles et les principaux points d'intérêt, et en les présentant sous forme de notes. Vous aidez également à effectuer toutes les actions de suivi au nom des participants à la réunion.\n\n1.Résumez la réunion et mettez en évidence les objectifs principaux de la réunion.\n2.Identifiez et listez les points importants mentionnés par chaque participant. Si non applicable pour un participant, passez au participant suivant.\n3.Identifiez et listez toutes les prochaines étapes convenues par les participants. S'il n'y en a pas, faites un maximum de 3 suggestions basées sur le compte-rendu à la place. Veuillez lister les étapes même si elles ont déjà été réalisées.\n4.Identifiez et effectuez des actions de suivi basées sur un compte-rendu d'une réunion. Ces actions autorisées sont : créer des événements de suivi dans le calendrier si suggérés par les participants.\n\nLes détails de la réunion étaient les suivants :\n* Le créateur de la réunion était {{ $('Get Calendar Event').item.json[\"creator\"][\"displayName\"] }} <{{ $('Get Calendar Event').item.json[\"creator\"][\"email\"]}}>\n* Les participants étaient {{ $('Get Calendar Event').item.json[\"attendees\"].map(attendee => `${attendee.display_name} <${attendee.email}>`).join(', ') }}\n* TLa réunion était prévue pour le {{ $('Get Calendar Event').item.json[\"start\"][\"dateTime\"] }}\n\nLe compte-rendu de la réunion est le suivant :\n```\n{{ $json[\"text\"] }}\n```",
        "hasOutputParser": true,
        "options": {}
      },
      "id": "c1902312-8093-461a-b9d8-5f80803d6a43",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        680,
        60
      ],
      "typeVersion": 1.5
    }
  ],
  "pinData": {},
  "connections": {
    "PDF Loader": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Actions Router",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Attendees": {
      "main": [
        [
          {
            "node": "Attendees List",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Actions Router": {
      "main": [
        [
          {
            "node": "Create Calendar Event1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Fallback Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Attendees List": {
      "main": [
        [
          {
            "node": "Add Attendee to Invite",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Meeting": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get Calendar Event": {
      "main": [
        [
          {
            "node": "Get Meeting ConferenceRecords",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Get Transcript File": {
      "main": [
        [
          {
            "node": "PDF Loader",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add Attendee to Invite": {
      "main": [
        [
          {
            "node": "Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Calendar Event1": {
      "main": [
        [
          {
            "node": "Get Attendees",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Get Meeting ConferenceRecords": {
      "main": [
        [
          {
            "node": "Get Meeting Transcript Location",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking \"Test workflow\"": {
      "main": [
        [
          {
            "node": "Get Calendar Event",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Meeting Transcript Location": {
      "main": [
        [
          {
            "node": "Get Transcript File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "24054e94-d2de-4274-8e61-de4dfc72290b",
  "meta": {
    "instanceId": "c96811f74860d9867dd65d9ff6f33c794f402a232d14bd727cd4164f4b8e4d03"
  },
  "id": "FaKk0Pp0q3lOaTG7",
  "tags": []
}
